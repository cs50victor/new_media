name: CI-RS

on:
  push:
    paths:
      - "**/.github/workflows/ci-rs.yml"
      - "**/new_media/**"
      - "**/Cargo.lock"
      - "**/Cargo.toml"
      - "**/rust-toolchain"
      - "**/.taplo.toml"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  # Set more verbose terminal output
  CARGO_TERM_VERBOSE: true
  RUST_BACKTRACE: 1

# Cancel old builds on new commit for same workflow + branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ci-rs:
    runs-on: [ macos-latest, ubuntu-latest]
    strategy:
      fail-fast: false
      matrix:
        rust-toolchain:
          - nightly

    steps:
      - name: Get source code
        uses: actions/checkout@v3

      - name: Setup ${{ matrix.rust-toolchain }} rust toolchain with caching
        uses: brndnmtthws/rust-action@v1
        with:
          toolchain: ${{ matrix.rust-toolchain }}
          components: rustfmt, clippy
          enable-sccache: "true"

      - name: Install binaries
        run: sudo apt-get update && sudo apt-get install -y clang pkg-config libx11-dev libasound2-dev libudev-dev libxkbcommon-x11-0 gcc-multilib

      - name: Build
        run: cargo build --release --features docker

      - name: Test
        run: cargo test --release

      - name: Lint
        run: cargo fmt --all -- --check
        # && cargo clippy --verbose -- -D warnings